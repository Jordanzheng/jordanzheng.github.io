<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>数据库 - 标签 - Saul&#39;s blog</title>
        <link>https://jordanzheng.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
        <description>数据库 - 标签 - Saul&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>saulhadis@gmail.com (saul)</managingEditor>
            <webMaster>saulhadis@gmail.com (saul)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 14 Sep 2019 21:49:00 &#43;0000</lastBuildDate><atom:link href="https://jordanzheng.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/" rel="self" type="application/rss+xml" /><item>
    <title>mysql千万级数据分表迁移方案</title>
    <link>https://jordanzheng.github.io/mysql-sharding/</link>
    <pubDate>Sat, 14 Sep 2019 21:49:00 &#43;0000</pubDate>
    <author>saul</author>
    <guid>https://jordanzheng.github.io/mysql-sharding/</guid>
    <description><![CDATA[<h1 id="前言">前言</h1>
<p>最近抽空将前段时间负责重构服务迁移数据的项目总结一下。主要涉及mysql分表、数据迁移等方面。由于分库分表面对的场景很多，具体问题具体分析，还是要依据当时项目的实际情况，选择最合理的方案。</p>
<!-- more -->
<h1 id="一项目背景">一、项目背景</h1>
<p>近来接手负责一个项目，需要重构业务的实名认证系统。当前该实名认证系统随着业务的增长以及红包活动复用实名认证表，用户实名认证表的数据迅速增长。基于下面几点原因，不得不重构系统，数据分表，迁移数据。</p>
<p>1、由于历史原因，实名认证表是单表，数据量已经达到三千万左右。mysql单表数据量过千万上亿级别就会对服务造成很大的影响。</p>
<ul>
<li>数据库备份，如果单表太大，备份时需要大量的磁盘IO和网络IO</li>
<li>后续很难对该表进行DDL修改</li>
<li>大表会经常访问与更新，就更有可能出现锁等待。将数据切分，用空间换时间，变相降低访问压力）</li>
</ul>
<p>2、该表主键uid之前是32位，为后续可以扩展，升级为64位，同时新增更新时间字段。
3、当前该服务以及外部服务直接操作数据库表。耦合严重。</p>
<h1 id="二方案设计">二、方案设计</h1>
<h2 id="1数据表怎么切分">1、数据表怎么切分</h2>
<p>数据切分通常分为两种方式：<strong>垂直切分</strong>和<strong>水平切分</strong></p>
<p>1、<strong>垂直切分</strong>就是根据业务耦合性，将关联度低的不同表存储在不同的数据库。做法与大系统拆分为多个小系统类似，按业务分类进行独立划分。与&quot;微服务治理&quot;的做法相似，每个微服务使用单独的一个数据库。</p>
<p>2、<strong>水平切分</strong>就是将同一个表按不同的条件分散到多个数据库或多个表中，每个表中只包含一部分数据，从而使得单个表的数据量变小。</p>
<p>常见的分片规则：</p>
<p>1、按<strong>时间区间或者id区间</strong>来切分。例如：按日期将不同月甚至是日的数据分散到不同的库中；将userId为1<del>9999的记录分到第一个库，10000</del>20000的分到第二个库，以此类推。某种意义上，某些系统中使用的&quot;冷热数据分离&quot;，将一些使用较少的历史数据迁移到其他库中，业务功能上只提供热点数据的查询，也是类似的实践。</p>
<p><strong>优点：</strong></p>
<ul>
<li>单表大小可控</li>
<li>天然便于水平扩展，后期如果想对整个分片集群扩容时，只需要添加节点即可，无需对其他分片的数据进行迁移</li>
<li>使用分片字段进行范围查找时，连续分片可快速定位分片进行快速查询，有效避免跨分片查询的问题。</li>
</ul>
<p><strong>缺点：</strong></p>
<ul>
<li>热点数据成为性能瓶颈。连续分片可能存在数据热点，例如按时间字段分片，有些分片存储最近时间段内的数据，可能会被频繁的读写，而有些分片存储的历史数据，则很少被查询</li>
</ul>
<p>2、<strong>根据数值取模</strong>。一般采用hash取模mod的切分方式</p>
<p><strong>优点：</strong></p>
<ul>
<li>数据分片相对比较均匀，不容易出现热点和并发访问的瓶颈</li>
</ul>
<p><strong>缺点：</strong></p>
<ul>
<li>后期分片集群扩容时，需要迁移旧的数据（使用一致性hash[&ldquo;算法&rdquo;]能较好的避免这个问题）</li>
<li>容易面临跨分片查询的复杂问题。</li>
</ul>
<p>因为实名认证表没有时间维度字段，主键uid同时也是用户唯一id，由账号系统生成。本次数据表切分最后采用<strong>按用户uid维度取模水平切分</strong>。考虑到后续业务的增长，按uid%100取模，切分成100张表，平均每张表的数量不到百万级别，可支持后续上亿的用户数据。</p>
<p><strong>优点：</strong></p>
<ul>
<li>数据均匀分布在100张表中</li>
<li>每张表的数据量不会太大</li>
</ul>
<p><strong>缺点：</strong></p>
<ul>
<li>一次性增加100张表</li>
<li>没法反向关系查询，例如根据手机号查找对应的uid，这个通过在缓存中增加手机号—&gt;uid反向关系解决</li>
</ul>
<h2 id="2数据怎么迁移">2、数据怎么迁移</h2>
<p>互联网很多“数据量较大，并发量较大，业务复杂度较高”的业务场景，例如在（1）底层表结构变更（2）分库个数变换（3）底层存储介质变换的众多需求下，需要进行数据迁移，如何“平滑迁移数据，迁移过程不停机，保证系统持续服务”。</p>
<p>常见的几种数据迁移方案：</p>
<h3 id="1-停机方案">1） 停机方案</h3>
<p></p>
<p>优点：停机方案是相对直观和简单的，但对服务的可用性有影响，许多游戏公司的服务器升级，游戏分区与合区，可能会采用类似的方案</p>
<p>缺点：1、影响服务可用性；2、指定时间内升级 ；3、容错性低，一旦规定时间内升级失败，只能回滚。</p>
<h3 id="2-平滑迁移--追日志法">2) 平滑迁移&ndash;追日志法</h3>
<p>
步骤一：服务进行升级，记录“对旧库上的数据修改”的日志，该日志只需记录关键信息
步骤二：研发一个数据迁移工具，进行数据迁移
步骤三：研发一个读取日志并迁移数据的小工具，要把步骤二迁移数据过程中产生的差异数据追平
步骤四：在持续重放日志，追平数据的过程中，研发一个数据校验的小工具，将旧库和新库中的数据进行比对，直到数据完全一致。
数据一直是99.9%的一致，不能完全一致，也是正常的，可以做一个秒级的旧库readonly，等日志重放程序完全追上数据后，再进行切库切流量。</p>
<h3 id="3平滑迁移--双写法">3）平滑迁移&ndash;双写法</h3>
<p></p>
<p>步骤一：服务进行升级，对“对旧库上的数据修改”（这里的修改，为数据的insert, delete, update），在新库上进行相同的修改操作
步骤二：研发一个数据迁移工具，进行数据迁移
步骤三：在数据迁移完成之后，需要使用数据校验的小工具，将旧库和新库中的数据进行比对，完全一致则符合预期，如果出现步骤二中的极限不一致情况，则以旧库中的数据为准。
步骤四：数据完全一致之后，将流量切到新库，完成平滑数据迁移。</p>
<p></p>
<p>（1）假设迁移过程中进行了一个双insert操作，旧库新库都插入了数据，数据一致性没有被破坏</p>
<p>（2）假设迁移过程中进行了一个双delete操作，这又分为两种情况：</p>
<p>​	（2.1）假设这delete的数据属于[min,now]范围，即已经完成迁移，则旧库新库都删除了数据，数据一致性没有被破坏。</p>
<p>​       （2.2）假设这delete的数据属于[now,max]范围，即未完成迁移，则旧库中删除操作的affect rows为1，新库中删除操作的affect rows为0，但是数据迁移工具在后续数据迁移中，并不会将这条旧库中被删除的数据迁移到新库中，所以数据一致性仍没有被破坏</p>
<p>（3）假设迁移过程中进行了一个双update操作，可以认为update操作是一个delete加一个insert操作的复合操作，所以数据仍然是一致的</p>
<p>除非在一种非常非常非常极限的情况下：</p>
<p>（1）date-migrate-tool<strong>刚好</strong>从旧库中将某一条数据X取出</p>
<p>（2）在X插入到新库中之前，旧库与新库中<strong>刚好</strong>对X进行了双delete操作</p>
<p>（3）date-migrate-tool再将X插入到新库中</p>
<p>这样，会出现新库比旧库多出一条数据X。</p>
<p>不管怎样，数据迁移完成之后，在数据迁移完成之后，需要使用数据校验的小工具，将旧库和新库中的数据进行比对，完全一致则符合预期，如果出现步骤二中的极限不一致情况，则以旧库中的数据为准。</p>
<p>此次重构项目中数据分两步迁移完成，数据从老表迁移到新表中。  <strong>在数据校验一致之前，所有的数据均以老表中的数据为准</strong> 。
因为认证信息表中无法以时间维度来迁移数据，只能通过主键uid导出老表中的数据，然后迁移到新表中。因为数据量接近3000万，所以采用mysql提供的LOAD DATA INFILE导入文件的形式导入数据，这样可大大缩短数据导入时间。LOAD DATA INFILE 语句以很高的速度从一个文本文件中读取行到一个表中。
1、迁移存量数据
为了保证不影响现网服务，读取老表的数据将从从库中读取。为了合理控制迁移数据的时长，并发的select老表的数据，在测试环境测试，迁移3000万的数据大概耗时1小时。</p>
<p>2、迁移增量数据
增量数据通过后面数据校验工具对比完成</p>
<h2 id="3怎么保证数据一致性">3、怎么保证数据一致性</h2>
<p>以 <strong>数据双写服务上线的时间</strong> 为分割点，分割点之前数据的一致性由数据迁移脚本来保证；分割点以后的数据一致性由新老表双写来保证；当然这些数据的一致性都会有检验机制。</p>
<p>1、对于数据迁移脚本迁移的数据一致性校验：数据根据uid取模从老表中分别存到100个文本文件中，当数据导入到每张新表后，直接再拉取新表数据到文本中，然后分别校验100个新老文件的MD5值，若都相同，则存量数据一致性没问题。</p>
<p>2、对于数据库双写保证数据一致性校验：在老表执行成功后才会旁路发hippo（公司内部的消息队列组件）操作新表，hippo消息队列做消息的可靠性保证，新表操作如果失败通过monitor上报告警、error日志记录来保证一致性，如果没有告警和error日志，则可以认为双写数据的一致性。</p>
<p>3、数据校验工具校验一致性：当存量数据导入新库之后，这是就通过数据校验工具比对新老库数据的一致性。为了不影响现网服务，数据校验比对拉的是老表的从库。当所有数据多次都比对一致后，此时新老库的数据就完全一致。</p>
<h2 id="4怎么保证不影响线上服务">4、怎么保证不影响线上服务</h2>
<p>为了不影响实名认证系统及周边业务方的线上服务，此次重构系统分三次迭代上线：</p>
<h3 id="1上线数据库新老表双写">1）上线数据库新老表双写</h3>
<p>迭代一主要保证新老表数据双写。实名认证老服务在原来写老表操作的地方，旁路一份数据到消息队列中，由新服务消费这个消息队列的消息写入到新表，同时也缓存一份数据到ckv（公司的缓存组件），并且存储由于分表导致无法反向查询手机号-&gt;uid的反向关系。旁路消息，异步处理这样不影响到原来的业务流程。</p>
<h3 id="2上线数据同步保证数据库新老表数据一致">2）上线数据同步，保证数据库新老表数据一致</h3>
<p>迭代二主要是上线数据同步服务，将老表的存量数据迁移到新表中，并且通过数据校验服务比对新老表数据的一致性。这个过程中，实名认证和业务方仍然使用老表。</p>
<h3 id="3上线切换使用新表ckv数据提供新的接口">3）上线切换使用新表、ckv数据，提供新的接口，</h3>
<p>迭代三上线切换使用新表，读接口使用ckv缓存数据，写接口先更新数据库再更新缓存，同时也会旁路消息更新老表，老表作为备份。迭代三过程中排查业务方的影响，将分表项目知会到业务方，业务方配合修改自己的逻辑。原有直接访问数据库表的调用一律切换成接口调用。严格控制上线步骤，不影响现网服务。</p>
<h2 id="5为什么选择这个方案">5、为什么选择这个方案</h2>
<p>方案初期也考虑了几种方案：</p>
<p>1、引入开源的数据库中间件如mycat、sharding-sphere等。但是引入第三方组件，增加系统复杂度，后续升级发布麻烦，mycat还需额外单独部署机器，增加运维成本。</p>
<p>2、停服迁移数据方案。该方案要停机，这样会影响到用户使用。</p>
<p>综上，最终选择不引入第三方组件，数据双写不停服的方案。</p>
<h1 id="三参考文章">三、参考文章</h1>
<p>1、<a href="https://www.w3cschool.cn/architectroad/architectroad-data-smooth-migration.html" target="_blank" rel="noopener noreffer ">100亿数据平滑数据迁移,不影响服务</a></p>
<p>2、<a href="https://www.cnblogs.com/butterfly100/p/9034281.html" target="_blank" rel="noopener noreffer ">数据库分库分表思路</a></p>
<p>3、<a href="https://hanchao.blog.csdn.net/article/details/87093352" target="_blank" rel="noopener noreffer ">记一次分库分表——改造策略总结</a></p>
]]></description>
</item>
<item>
    <title>mysql批量创建表</title>
    <link>https://jordanzheng.github.io/batch-create-table-mysql/</link>
    <pubDate>Sat, 17 Aug 2019 20:49:37 &#43;0000</pubDate>
    <author>saul</author>
    <guid>https://jordanzheng.github.io/batch-create-table-mysql/</guid>
    <description><![CDATA[<p>互联网业务快速发展，经常遇到业务在设计表时只是单表，后面随着业务快速发展，单表数据量达到千万级别，甚至上亿级别。此时mysql单表性能下降，解决办法之一是分表。</p>
<p>批量创建多张表结构一样的表，方法有很多，本文介绍两种，仅供参考：</p>
<!-- more -->
<h2 id="一存储过程创建多张表">一、存储过程创建多张表</h2>
<h3 id="1创建一百张表-createtablesql">1、创建一百张表 createTable.sql</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-mysql" data-lang="mysql"><span class="line"><span class="cl"><span class="c1">#创建数据库要先指定字符集，否则使用数据库的默认字符集
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="k">CREATE</span><span class="w"> </span><span class="k">DATABASE</span><span class="w"> </span><span class="n">db_test</span><span class="w"> </span><span class="k">DEFAULT</span><span class="w"> </span><span class="k">CHARACTER</span><span class="w"> </span><span class="kt">SET</span><span class="w"> </span><span class="n">UTF8</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">USE</span><span class="w"> </span><span class="n">db_test</span><span class="p">;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CALL</span><span class="w"> </span><span class="nf">create_table</span><span class="p">();</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c1">#-------------------以下是存储过程--------------
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">DELIMITER</span><span class="w"> </span><span class="err">$$</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">CREATE</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="k">PROCEDURE</span><span class="w"> </span><span class="o">`</span><span class="n">db_test</span><span class="o">`</span><span class="p">.</span><span class="o">`</span><span class="n">create_table</span><span class="o">`</span><span class="p">()</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">BEGIN</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">         </span><span class="k">DECLARE</span><span class="w"> </span><span class="n">i</span><span class="w"> </span><span class="kt">INT</span><span class="p">;</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">         </span><span class="k">DECLARE</span><span class="w"> </span><span class="n">table_name</span><span class="w"> </span><span class="kt">VARCHAR</span><span class="p">(</span><span class="mi">30</span><span class="p">);</span><span class="w">   
</span></span></span><span class="line"><span class="cl"><span class="w">         </span><span class="k">DECLARE</span><span class="w"> </span><span class="n">table_pre</span><span class="w"> </span><span class="kt">VARCHAR</span><span class="p">(</span><span class="mi">30</span><span class="p">);</span><span class="w">   
</span></span></span><span class="line"><span class="cl"><span class="w">         </span><span class="k">DECLARE</span><span class="w"> </span><span class="n">sql_text</span><span class="w"> </span><span class="kt">VARCHAR</span><span class="p">(</span><span class="mi">3000</span><span class="p">);</span><span class="w">   
</span></span></span><span class="line"><span class="cl"><span class="w">         </span><span class="kt">SET</span><span class="w"> </span><span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">         </span><span class="kt">SET</span><span class="w"> </span><span class="n">table_name</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">;</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">         </span><span class="kt">SET</span><span class="w"> </span><span class="n">table_pre</span><span class="o">=</span><span class="s1">&#39;test_table_&#39;</span><span class="p">;</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">         </span><span class="kt">SET</span><span class="w"> </span><span class="n">sql_text</span><span class="o">=</span><span class="s1">&#39;&#39;</span><span class="p">;</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">         </span><span class="k">WHILE</span><span class="w"> </span><span class="n">i</span><span class="o">&lt;</span><span class="mi">100</span><span class="w"> </span><span class="n">DO</span><span class="w">   
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="kt">SET</span><span class="w"> </span><span class="n">table_name</span><span class="o">=</span><span class="nf">CONCAT</span><span class="p">(</span><span class="n">table_pre</span><span class="p">,</span><span class="n">i</span><span class="p">);</span><span class="w">   
</span></span></span><span class="line"><span class="cl"><span class="w">              
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="kt">SET</span><span class="w"> </span><span class="n">sql_text</span><span class="o">=</span><span class="nf">CONCAT</span><span class="p">(</span><span class="s1">&#39;CREATE TABLE &#39;</span><span class="p">,</span><span class="w"> </span><span class="n">table_name</span><span class="p">,</span><span class="w"> </span><span class="s1">&#39; (
</span></span></span><span class="line"><span class="cl"><span class="s1">                   `uid` BIGINT(11) unsigned NOT NULL COMMENT \&#39;</span><span class="err">统一</span><span class="n">ID</span><span class="err">\</span><span class="s1">&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s1">                   `name` varchar(32) COLLATE utf8_bin DEFAULT NULL COMMENT \&#39;</span><span class="err">姓名\</span><span class="s1">&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s1">                   `idcard` varchar(32) COLLATE utf8_bin DEFAULT NULL COMMENT \&#39;</span><span class="err">身份证\</span><span class="s1">&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s1">                   `idcard_url` varchar(256) COLLATE utf8_bin DEFAULT NULL COMMENT \&#39;</span><span class="err">身份证图片\</span><span class="s1">&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s1">                   `idcard_auth_status` int(4) unsigned DEFAULT 0 COMMENT \&#39;</span><span class="err">身份证认证状态\</span><span class="s1">&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s1">                   `idcard_auth_time` BIGINT(12) unsigned DEFAULT 0 COMMENT \&#39;</span><span class="err">身份证认证时间\</span><span class="s1">&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s1">                   `phone` varchar(32) COLLATE utf8_bin DEFAULT NULL COMMENT \&#39;</span><span class="err">手机号码\</span><span class="s1">&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s1">                   `phone_auth_status` int(4) unsigned DEFAULT 0 COMMENT \&#39;</span><span class="err">手机认证状态\</span><span class="s1">&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s1">                   `phone_auth_time` BIGINT(12) unsigned DEFAULT 0 COMMENT \&#39;</span><span class="err">手机认证时间\</span><span class="s1">&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s1">                   `update_time` BIGINT(12) unsigned DEFAULT 0 COMMENT \&#39;</span><span class="err">更新时间\</span><span class="s1">&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s1">                   PRIMARY KEY (`uid`),
</span></span></span><span class="line"><span class="cl"><span class="s1">                   KEY `index_name` (`phone`(11)),
</span></span></span><span class="line"><span class="cl"><span class="s1">                   KEY `index_idcard` (`idcard`(18)),
</span></span></span><span class="line"><span class="cl"><span class="s1">                 ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC&#39;</span><span class="w"> </span><span class="p">);</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">                  
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="k">SELECT</span><span class="w"> </span><span class="n">sql_text</span><span class="p">;</span><span class="w">   
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="kt">SET</span><span class="w"> </span><span class="o">@</span><span class="n">sql_text</span><span class="o">=</span><span class="n">sql_text</span><span class="p">;</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="n">PREPARE</span><span class="w"> </span><span class="n">stmt</span><span class="w"> </span><span class="k">FROM</span><span class="w"> </span><span class="o">@</span><span class="n">sql_text</span><span class="p">;</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="n">EXECUTE</span><span class="w"> </span><span class="n">stmt</span><span class="p">;</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="n">DEALLOCATE</span><span class="w"> </span><span class="n">PREPARE</span><span class="w"> </span><span class="n">stmt</span><span class="p">;</span><span class="w">    
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="kt">SET</span><span class="w"> </span><span class="n">i</span><span class="o">=</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="n">END</span><span class="w"> </span><span class="k">WHILE</span><span class="p">;</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">END</span><span class="err">$$</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w">            
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="n">DELIMITER</span><span class="w"> </span><span class="p">;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="2执行存储过程创建表">2、执行存储过程，创建表</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">登上mysql，执行createTable.sql即可
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="二利用sql语句创建多张表">二、<strong>利用sql语句创建多张表</strong></h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="cp">#!/bin/sh
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1"># 数据表名定义</span>
</span></span><span class="line"><span class="cl"><span class="nv">timestamp</span><span class="o">=</span><span class="sb">`</span>date -d <span class="s2">&#34;3 month ago&#34;</span> +%Y%m%d<span class="sb">`</span>
</span></span><span class="line"><span class="cl"><span class="nv">tablename</span><span class="o">=</span><span class="s1">&#39;t_table_test_20191108&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">sql</span><span class="o">=</span><span class="s2">&#34;CREATE TABLE </span><span class="nv">$tablename</span><span class="s2"> (
</span></span></span><span class="line"><span class="cl"><span class="s2">        id BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT &#39;唯一id&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s2">        uid BIGINT(20) UNSIGNED NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;uid&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s2">        msg_id VARCHAR(64) NOT NULL DEFAULT &#39;&#39; COMMENT &#39;消息id&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s2">        msg_ts BIGINT(20) NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;发言时间戳&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s2">        sender_uid BIGINT(20) UNSIGNED NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;发言者uid&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s2">        sender_nic VARCHAR(64) NOT NULL DEFAULT &#39;&#39; COMMENT &#39;发言者昵称&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s2">        text VARCHAR(2048) NOT NULL DEFAULT &#39;&#39; COMMENT &#39;发言内容&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s2">        update_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT &#39;更新时间&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s2">        PRIMARY KEY (id),
</span></span></span><span class="line"><span class="cl"><span class="s2">        UNIQUE INDEX idx_msg_id (msg_id),
</span></span></span><span class="line"><span class="cl"><span class="s2">        INDEX idx_anchor_uid_msg_ts (anchor_uid, msg_ts)
</span></span></span><span class="line"><span class="cl"><span class="s2">)COLLATE=&#39;utf8mb4_general_ci&#39; ENGINE=InnoDB AUTO_INCREMENT=1000;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">mysql -h 10.23.22.22 -udb_test -pdb_test -P2223 -Ddb_test --default-character-set<span class="o">=</span>utf8 -Ne <span class="s2">&#34;</span><span class="nv">$sql</span><span class="s2">&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>如果字段名和mysql关键字重复，将字段名用**<code>**括起来，例如：</code>index`</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="cp">#!/bin/sh
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl"><span class="c1"># 数据表名定义</span>
</span></span><span class="line"><span class="cl"><span class="nv">timestamp</span><span class="o">=</span><span class="sb">`</span>date -d <span class="s2">&#34;3 month ago&#34;</span> +%Y%m%d<span class="sb">`</span>
</span></span><span class="line"><span class="cl"><span class="nv">tablename</span><span class="o">=</span><span class="s1">&#39;t_table_test_20191108&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">sql</span><span class="o">=</span><span class="s2">&#34;CREATE TABLE </span><span class="nv">$tablename</span><span class="s2"> (
</span></span></span><span class="line"><span class="cl"><span class="s2">        \`id \` BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT &#39;唯一id&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s2">        \`uid \` BIGINT(20) UNSIGNED NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;uid&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s2">        \`msg_id\` VARCHAR(64) NOT NULL DEFAULT &#39;&#39; COMMENT &#39;消息id&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s2">        \`msg_ts\` BIGINT(20) NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;发言时间戳&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s2">        \`sender_uid\` BIGINT(20) UNSIGNED NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;发言者uid&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s2">        \`sender_nic\` VARCHAR(64) NOT NULL DEFAULT &#39;&#39; COMMENT &#39;发言者昵称&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s2">        \`text\` VARCHAR(2048) NOT NULL DEFAULT &#39;&#39; COMMENT &#39;发言内容&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s2">        \`update_time\` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT &#39;更新时间&#39;,
</span></span></span><span class="line"><span class="cl"><span class="s2">        PRIMARY KEY (\`id\`),
</span></span></span><span class="line"><span class="cl"><span class="s2">        UNIQUE INDEX idx_msg_id (\`msg_id\`),
</span></span></span><span class="line"><span class="cl"><span class="s2">        INDEX idx_anchor_uid_msg_ts (\`anchor_uid\`, \`msg_ts\`)
</span></span></span><span class="line"><span class="cl"><span class="s2">)COLLATE=&#39;utf8mb4_general_ci&#39; ENGINE=InnoDB AUTO_INCREMENT=1000;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">mysql -h 10.23.22.22 -udb_test -pdb_test -P2223 -Ddb_test --default-character-set<span class="o">=</span>utf8 -Ne <span class="s2">&#34;</span><span class="nv">$sql</span><span class="s2">&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item>
</channel>
</rss>
